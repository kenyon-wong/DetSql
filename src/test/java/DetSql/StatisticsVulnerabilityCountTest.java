package DetSql;

import org.junit.jupiter.api.Test;
import java.util.*;
import static org.junit.jupiter.api.Assertions.*;

public class StatisticsVulnerabilityCountTest {

    private PocLogEntry entry(String name) {
        return new PocLogEntry(name, null, null, null, null, null, null, null, null);
    }

    @Test
    public void testCountsUniqueByParamNotPayload() {
        Statistics s = new Statistics();
        List<PocLogEntry> entries = Arrays.asList(
            entry("sort"), entry("sort"), entry("sort")
        );
        s.recordFromEntries("http://example.com/xxx?a=1", "GET", entries);
        assertEquals(1, s.getVulnerabilitiesFound());
    }

    @Test
    public void testCountsDifferentParamsSeparately() {
        Statistics s = new Statistics();
        List<PocLogEntry> entries = Arrays.asList(
            entry("sort"), entry("sortN")
        );
        s.recordFromEntries("http://example.com/xxy", "GET", entries);
        assertEquals(2, s.getVulnerabilitiesFound());
    }

    @Test
    public void testDifferentHostOrPortAreDistinct() {
        Statistics s = new Statistics();
        List<PocLogEntry> e = Collections.singletonList(entry("q"));
        s.recordFromEntries("http://a.example.com/search", "GET", e);
        s.recordFromEntries("http://b.example.com/search", "GET", e);
        assertEquals(2, s.getVulnerabilitiesFound());

        s.reset();
        s.recordFromEntries("http://a.example.com:8080/search", "GET", e);
        s.recordFromEntries("http://a.example.com:8081/search", "GET", e);
        assertEquals(2, s.getVulnerabilitiesFound());
    }

    @Test
    public void testDefaultPortsAreNormalized() {
        Statistics s = new Statistics();
        List<PocLogEntry> e = Collections.singletonList(entry("q"));
        s.recordFromEntries("http://a.example.com/search", "GET", e); // implicit :80
        s.recordFromEntries("http://a.example.com:80/search", "GET", e); // explicit :80
        assertEquals(1, s.getVulnerabilitiesFound());

        s.reset();
        s.recordFromEntries("https://a.example.com/search", "GET", e); // implicit :443
        s.recordFromEntries("https://a.example.com:443/search", "GET", e); // explicit :443
        assertEquals(1, s.getVulnerabilitiesFound());
    }

    @Test
    public void testDifferentMethodsAreDistinct() {
        Statistics s = new Statistics();
        List<PocLogEntry> e = Collections.singletonList(entry("q"));
        s.recordFromEntries("http://a.example.com/search", "GET", e);
        s.recordFromEntries("http://a.example.com/search", "POST", e);
        assertEquals(2, s.getVulnerabilitiesFound());
    }
}
